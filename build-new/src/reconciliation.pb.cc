// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: reconciliation.proto

#include "reconciliation.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_reconciliation_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_IbfCell_reconciliation_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_reconciliation_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_KeyValue_reconciliation_2eproto;
namespace reconciliation {
class SetUpRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SetUpRequest> _instance;
} _SetUpRequest_default_instance_;
class SetUpReplyDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SetUpReply> _instance;
} _SetUpReply_default_instance_;
class EstimateRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<EstimateRequest> _instance;
} _EstimateRequest_default_instance_;
class EstimateReplyDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<EstimateReply> _instance;
} _EstimateReply_default_instance_;
class PinSketchRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PinSketchRequest> _instance;
} _PinSketchRequest_default_instance_;
class PinSketchReplyDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PinSketchReply> _instance;
} _PinSketchReply_default_instance_;
class PbsRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PbsRequest> _instance;
} _PbsRequest_default_instance_;
class PbsReplyDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PbsReply> _instance;
} _PbsReply_default_instance_;
class IbfCellDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<IbfCell> _instance;
} _IbfCell_default_instance_;
class DDigestRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DDigestRequest> _instance;
} _DDigestRequest_default_instance_;
class DDigestReplyDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DDigestReply> _instance;
} _DDigestReply_default_instance_;
class GrapheneRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GrapheneRequest> _instance;
} _GrapheneRequest_default_instance_;
class GrapheneReplyDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GrapheneReply> _instance;
} _GrapheneReply_default_instance_;
class KeyValueDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<KeyValue> _instance;
} _KeyValue_default_instance_;
class SynchronizeMessageDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SynchronizeMessage> _instance;
} _SynchronizeMessage_default_instance_;
}  // namespace reconciliation
static void InitDefaultsscc_info_DDigestReply_reconciliation_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::reconciliation::_DDigestReply_default_instance_;
    new (ptr) ::reconciliation::DDigestReply();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::reconciliation::DDigestReply::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_DDigestReply_reconciliation_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_DDigestReply_reconciliation_2eproto}, {
      &scc_info_KeyValue_reconciliation_2eproto.base,}};

static void InitDefaultsscc_info_DDigestRequest_reconciliation_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::reconciliation::_DDigestRequest_default_instance_;
    new (ptr) ::reconciliation::DDigestRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::reconciliation::DDigestRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_DDigestRequest_reconciliation_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_DDigestRequest_reconciliation_2eproto}, {
      &scc_info_IbfCell_reconciliation_2eproto.base,}};

static void InitDefaultsscc_info_EstimateReply_reconciliation_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::reconciliation::_EstimateReply_default_instance_;
    new (ptr) ::reconciliation::EstimateReply();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::reconciliation::EstimateReply::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_EstimateReply_reconciliation_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_EstimateReply_reconciliation_2eproto}, {}};

static void InitDefaultsscc_info_EstimateRequest_reconciliation_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::reconciliation::_EstimateRequest_default_instance_;
    new (ptr) ::reconciliation::EstimateRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::reconciliation::EstimateRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_EstimateRequest_reconciliation_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_EstimateRequest_reconciliation_2eproto}, {}};

static void InitDefaultsscc_info_GrapheneReply_reconciliation_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::reconciliation::_GrapheneReply_default_instance_;
    new (ptr) ::reconciliation::GrapheneReply();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::reconciliation::GrapheneReply::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_GrapheneReply_reconciliation_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_GrapheneReply_reconciliation_2eproto}, {
      &scc_info_IbfCell_reconciliation_2eproto.base,}};

static void InitDefaultsscc_info_GrapheneRequest_reconciliation_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::reconciliation::_GrapheneRequest_default_instance_;
    new (ptr) ::reconciliation::GrapheneRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::reconciliation::GrapheneRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GrapheneRequest_reconciliation_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GrapheneRequest_reconciliation_2eproto}, {}};

static void InitDefaultsscc_info_IbfCell_reconciliation_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::reconciliation::_IbfCell_default_instance_;
    new (ptr) ::reconciliation::IbfCell();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::reconciliation::IbfCell::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_IbfCell_reconciliation_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_IbfCell_reconciliation_2eproto}, {}};

static void InitDefaultsscc_info_KeyValue_reconciliation_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::reconciliation::_KeyValue_default_instance_;
    new (ptr) ::reconciliation::KeyValue();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::reconciliation::KeyValue::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_KeyValue_reconciliation_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_KeyValue_reconciliation_2eproto}, {}};

static void InitDefaultsscc_info_PbsReply_reconciliation_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::reconciliation::_PbsReply_default_instance_;
    new (ptr) ::reconciliation::PbsReply();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::reconciliation::PbsReply::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_PbsReply_reconciliation_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_PbsReply_reconciliation_2eproto}, {
      &scc_info_KeyValue_reconciliation_2eproto.base,}};

static void InitDefaultsscc_info_PbsRequest_reconciliation_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::reconciliation::_PbsRequest_default_instance_;
    new (ptr) ::reconciliation::PbsRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::reconciliation::PbsRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_PbsRequest_reconciliation_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_PbsRequest_reconciliation_2eproto}, {
      &scc_info_KeyValue_reconciliation_2eproto.base,}};

static void InitDefaultsscc_info_PinSketchReply_reconciliation_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::reconciliation::_PinSketchReply_default_instance_;
    new (ptr) ::reconciliation::PinSketchReply();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::reconciliation::PinSketchReply::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_PinSketchReply_reconciliation_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_PinSketchReply_reconciliation_2eproto}, {
      &scc_info_KeyValue_reconciliation_2eproto.base,}};

static void InitDefaultsscc_info_PinSketchRequest_reconciliation_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::reconciliation::_PinSketchRequest_default_instance_;
    new (ptr) ::reconciliation::PinSketchRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::reconciliation::PinSketchRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_PinSketchRequest_reconciliation_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_PinSketchRequest_reconciliation_2eproto}, {}};

static void InitDefaultsscc_info_SetUpReply_reconciliation_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::reconciliation::_SetUpReply_default_instance_;
    new (ptr) ::reconciliation::SetUpReply();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::reconciliation::SetUpReply::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SetUpReply_reconciliation_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_SetUpReply_reconciliation_2eproto}, {}};

static void InitDefaultsscc_info_SetUpRequest_reconciliation_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::reconciliation::_SetUpRequest_default_instance_;
    new (ptr) ::reconciliation::SetUpRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::reconciliation::SetUpRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SetUpRequest_reconciliation_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_SetUpRequest_reconciliation_2eproto}, {}};

static void InitDefaultsscc_info_SynchronizeMessage_reconciliation_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::reconciliation::_SynchronizeMessage_default_instance_;
    new (ptr) ::reconciliation::SynchronizeMessage();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::reconciliation::SynchronizeMessage::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_SynchronizeMessage_reconciliation_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_SynchronizeMessage_reconciliation_2eproto}, {
      &scc_info_KeyValue_reconciliation_2eproto.base,}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_reconciliation_2eproto[15];
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_reconciliation_2eproto[2];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_reconciliation_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_reconciliation_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::reconciliation::SetUpRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::reconciliation::SetUpRequest, next_algorithm_),
  PROTOBUF_FIELD_OFFSET(::reconciliation::SetUpRequest, seed_),
  PROTOBUF_FIELD_OFFSET(::reconciliation::SetUpRequest, d_),
  PROTOBUF_FIELD_OFFSET(::reconciliation::SetUpRequest, object_sz_),
  PROTOBUF_FIELD_OFFSET(::reconciliation::SetUpRequest, usz_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::reconciliation::SetUpReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::reconciliation::SetUpReply, status_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::reconciliation::EstimateRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::reconciliation::EstimateRequest, sketches_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::reconciliation::EstimateReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::reconciliation::EstimateReply, estimated_value_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::reconciliation::PinSketchRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::reconciliation::PinSketchRequest, sketch_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::reconciliation::PinSketchReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::reconciliation::PinSketchReply, missing_keys_),
  PROTOBUF_FIELD_OFFSET(::reconciliation::PinSketchReply, pushed_key_values_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::reconciliation::PbsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::reconciliation::PbsRequest, encoding_msg_),
  PROTOBUF_FIELD_OFFSET(::reconciliation::PbsRequest, encoding_hint_),
  PROTOBUF_FIELD_OFFSET(::reconciliation::PbsRequest, pushed_key_values_),
  PROTOBUF_FIELD_OFFSET(::reconciliation::PbsRequest, missing_keys_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::reconciliation::PbsReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::reconciliation::PbsReply, decoding_msg_),
  PROTOBUF_FIELD_OFFSET(::reconciliation::PbsReply, xors_),
  PROTOBUF_FIELD_OFFSET(::reconciliation::PbsReply, checksum_),
  PROTOBUF_FIELD_OFFSET(::reconciliation::PbsReply, pushed_key_values_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::reconciliation::IbfCell, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::reconciliation::IbfCell, count_),
  PROTOBUF_FIELD_OFFSET(::reconciliation::IbfCell, keysum_),
  PROTOBUF_FIELD_OFFSET(::reconciliation::IbfCell, keycheck_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::reconciliation::DDigestRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::reconciliation::DDigestRequest, cells_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::reconciliation::DDigestReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::reconciliation::DDigestReply, succeed_),
  PROTOBUF_FIELD_OFFSET(::reconciliation::DDigestReply, missing_keys_),
  PROTOBUF_FIELD_OFFSET(::reconciliation::DDigestReply, pushed_key_values_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::reconciliation::GrapheneRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::reconciliation::GrapheneRequest, m_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::reconciliation::GrapheneReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::reconciliation::GrapheneReply, a_),
  PROTOBUF_FIELD_OFFSET(::reconciliation::GrapheneReply, n_),
  PROTOBUF_FIELD_OFFSET(::reconciliation::GrapheneReply, fpr_),
  PROTOBUF_FIELD_OFFSET(::reconciliation::GrapheneReply, bf_),
  PROTOBUF_FIELD_OFFSET(::reconciliation::GrapheneReply, ibf_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::reconciliation::KeyValue, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::reconciliation::KeyValue, key_),
  PROTOBUF_FIELD_OFFSET(::reconciliation::KeyValue, value_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::reconciliation::SynchronizeMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::reconciliation::SynchronizeMessage, pushes_),
  PROTOBUF_FIELD_OFFSET(::reconciliation::SynchronizeMessage, pulls_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::reconciliation::SetUpRequest)},
  { 10, -1, sizeof(::reconciliation::SetUpReply)},
  { 16, -1, sizeof(::reconciliation::EstimateRequest)},
  { 22, -1, sizeof(::reconciliation::EstimateReply)},
  { 28, -1, sizeof(::reconciliation::PinSketchRequest)},
  { 34, -1, sizeof(::reconciliation::PinSketchReply)},
  { 41, -1, sizeof(::reconciliation::PbsRequest)},
  { 50, -1, sizeof(::reconciliation::PbsReply)},
  { 59, -1, sizeof(::reconciliation::IbfCell)},
  { 67, -1, sizeof(::reconciliation::DDigestRequest)},
  { 73, -1, sizeof(::reconciliation::DDigestReply)},
  { 81, -1, sizeof(::reconciliation::GrapheneRequest)},
  { 87, -1, sizeof(::reconciliation::GrapheneReply)},
  { 97, -1, sizeof(::reconciliation::KeyValue)},
  { 104, -1, sizeof(::reconciliation::SynchronizeMessage)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::reconciliation::_SetUpRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::reconciliation::_SetUpReply_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::reconciliation::_EstimateRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::reconciliation::_EstimateReply_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::reconciliation::_PinSketchRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::reconciliation::_PinSketchReply_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::reconciliation::_PbsRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::reconciliation::_PbsReply_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::reconciliation::_IbfCell_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::reconciliation::_DDigestRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::reconciliation::_DDigestReply_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::reconciliation::_GrapheneRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::reconciliation::_GrapheneReply_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::reconciliation::_KeyValue_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::reconciliation::_SynchronizeMessage_default_instance_),
};

const char descriptor_table_protodef_reconciliation_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\024reconciliation.proto\022\016reconciliation\"\312"
  "\001\n\014SetUpRequest\022;\n\016next_algorithm\030\001 \001(\0162"
  "#.reconciliation.SetUpRequest.Method\022\014\n\004"
  "seed\030\002 \001(\r\022\t\n\001d\030\003 \001(\r\022\021\n\tobject_sz\030\004 \001(\r"
  "\022\013\n\003usz\030\005 \001(\r\"D\n\006Method\022\013\n\007DDigest\020\000\022\r\n\t"
  "PinSketch\020\001\022\014\n\010Graphene\020\002\022\007\n\003PBS\020\003\022\007\n\003EN"
  "D\020\004\"\216\001\n\nSetUpReply\022C\n\006status\030\001 \001(\01623.rec"
  "onciliation.SetUpReply.PreviousExperimen"
  "tStatus\";\n\030PreviousExperimentStatus\022\006\n\002N"
  "A\020\000\022\013\n\007SUCCEED\020\001\022\n\n\006FAILED\020\002\"#\n\017Estimate"
  "Request\022\020\n\010sketches\030\001 \003(\005\"(\n\rEstimateRep"
  "ly\022\027\n\017estimated_value\030\001 \001(\002\"\"\n\020PinSketch"
  "Request\022\016\n\006sketch\030\001 \001(\t\"[\n\016PinSketchRepl"
  "y\022\024\n\014missing_keys\030\001 \003(\005\0223\n\021pushed_key_va"
  "lues\030\002 \003(\0132\030.reconciliation.KeyValue\"\204\001\n"
  "\nPbsRequest\022\024\n\014encoding_msg\030\001 \001(\014\022\025\n\renc"
  "oding_hint\030\002 \001(\014\0223\n\021pushed_key_values\030\003 "
  "\003(\0132\030.reconciliation.KeyValue\022\024\n\014missing"
  "_keys\030\004 \003(\r\"u\n\010PbsReply\022\024\n\014decoding_msg\030"
  "\001 \001(\014\022\014\n\004xors\030\002 \003(\r\022\020\n\010checksum\030\003 \003(\r\0223\n"
  "\021pushed_key_values\030\004 \003(\0132\030.reconciliatio"
  "n.KeyValue\":\n\007IbfCell\022\r\n\005count\030\001 \001(\005\022\016\n\006"
  "keySum\030\002 \001(\004\022\020\n\010keyCheck\030\003 \001(\r\"8\n\016DDiges"
  "tRequest\022&\n\005cells\030\001 \003(\0132\027.reconciliation"
  ".IbfCell\"j\n\014DDigestReply\022\017\n\007succeed\030\001 \001("
  "\010\022\024\n\014missing_keys\030\002 \003(\005\0223\n\021pushed_key_va"
  "lues\030\003 \003(\0132\030.reconciliation.KeyValue\"\034\n\017"
  "GrapheneRequest\022\t\n\001m\030\001 \001(\r\"d\n\rGrapheneRe"
  "ply\022\t\n\001a\030\001 \001(\r\022\t\n\001n\030\002 \001(\r\022\013\n\003fpr\030\003 \001(\001\022\n"
  "\n\002bf\030\004 \001(\014\022$\n\003ibf\030\005 \003(\0132\027.reconciliation"
  ".IbfCell\"&\n\010KeyValue\022\013\n\003key\030\001 \001(\005\022\r\n\005val"
  "ue\030\002 \001(\t\"M\n\022SynchronizeMessage\022(\n\006pushes"
  "\030\001 \003(\0132\030.reconciliation.KeyValue\022\r\n\005pull"
  "s\030\002 \003(\0052\335\004\n\nEstimation\022L\n\010Estimate\022\037.rec"
  "onciliation.EstimateRequest\032\035.reconcilia"
  "tion.EstimateReply\"\000\022L\n\016ReconcileSetUp\022\034"
  ".reconciliation.SetUpRequest\032\032.reconcili"
  "ation.SetUpReply\"\000\022X\n\022ReconcilePinSketch"
  "\022 .reconciliation.PinSketchRequest\032\036.rec"
  "onciliation.PinSketchReply\"\000\022R\n\020Reconcil"
  "eDDigest\022\036.reconciliation.DDigestRequest"
  "\032\034.reconciliation.DDigestReply\"\000\022U\n\021Reco"
  "ncileGraphene\022\037.reconciliation.GrapheneR"
  "equest\032\035.reconciliation.GrapheneReply\"\000\022"
  "U\n\033ReconcileParityBitmapSketch\022\032.reconci"
  "liation.PbsRequest\032\030.reconciliation.PbsR"
  "eply\"\000\022W\n\013Synchronize\022\".reconciliation.S"
  "ynchronizeMessage\032\".reconciliation.Synch"
  "ronizeMessage\"\000b\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_reconciliation_2eproto_deps[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_reconciliation_2eproto_sccs[15] = {
  &scc_info_DDigestReply_reconciliation_2eproto.base,
  &scc_info_DDigestRequest_reconciliation_2eproto.base,
  &scc_info_EstimateReply_reconciliation_2eproto.base,
  &scc_info_EstimateRequest_reconciliation_2eproto.base,
  &scc_info_GrapheneReply_reconciliation_2eproto.base,
  &scc_info_GrapheneRequest_reconciliation_2eproto.base,
  &scc_info_IbfCell_reconciliation_2eproto.base,
  &scc_info_KeyValue_reconciliation_2eproto.base,
  &scc_info_PbsReply_reconciliation_2eproto.base,
  &scc_info_PbsRequest_reconciliation_2eproto.base,
  &scc_info_PinSketchReply_reconciliation_2eproto.base,
  &scc_info_PinSketchRequest_reconciliation_2eproto.base,
  &scc_info_SetUpReply_reconciliation_2eproto.base,
  &scc_info_SetUpRequest_reconciliation_2eproto.base,
  &scc_info_SynchronizeMessage_reconciliation_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_reconciliation_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_reconciliation_2eproto = {
  false, false, descriptor_table_protodef_reconciliation_2eproto, "reconciliation.proto", 1943,
  &descriptor_table_reconciliation_2eproto_once, descriptor_table_reconciliation_2eproto_sccs, descriptor_table_reconciliation_2eproto_deps, 15, 0,
  schemas, file_default_instances, TableStruct_reconciliation_2eproto::offsets,
  file_level_metadata_reconciliation_2eproto, 15, file_level_enum_descriptors_reconciliation_2eproto, file_level_service_descriptors_reconciliation_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_reconciliation_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_reconciliation_2eproto)), true);
namespace reconciliation {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* SetUpRequest_Method_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_reconciliation_2eproto);
  return file_level_enum_descriptors_reconciliation_2eproto[0];
}
bool SetUpRequest_Method_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr SetUpRequest_Method SetUpRequest::DDigest;
constexpr SetUpRequest_Method SetUpRequest::PinSketch;
constexpr SetUpRequest_Method SetUpRequest::Graphene;
constexpr SetUpRequest_Method SetUpRequest::PBS;
constexpr SetUpRequest_Method SetUpRequest::END;
constexpr SetUpRequest_Method SetUpRequest::Method_MIN;
constexpr SetUpRequest_Method SetUpRequest::Method_MAX;
constexpr int SetUpRequest::Method_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* SetUpReply_PreviousExperimentStatus_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_reconciliation_2eproto);
  return file_level_enum_descriptors_reconciliation_2eproto[1];
}
bool SetUpReply_PreviousExperimentStatus_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr SetUpReply_PreviousExperimentStatus SetUpReply::NA;
constexpr SetUpReply_PreviousExperimentStatus SetUpReply::SUCCEED;
constexpr SetUpReply_PreviousExperimentStatus SetUpReply::FAILED;
constexpr SetUpReply_PreviousExperimentStatus SetUpReply::PreviousExperimentStatus_MIN;
constexpr SetUpReply_PreviousExperimentStatus SetUpReply::PreviousExperimentStatus_MAX;
constexpr int SetUpReply::PreviousExperimentStatus_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)

// ===================================================================

void SetUpRequest::InitAsDefaultInstance() {
}
class SetUpRequest::_Internal {
 public:
};

SetUpRequest::SetUpRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:reconciliation.SetUpRequest)
}
SetUpRequest::SetUpRequest(const SetUpRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&next_algorithm_, &from.next_algorithm_,
    static_cast<size_t>(reinterpret_cast<char*>(&usz_) -
    reinterpret_cast<char*>(&next_algorithm_)) + sizeof(usz_));
  // @@protoc_insertion_point(copy_constructor:reconciliation.SetUpRequest)
}

void SetUpRequest::SharedCtor() {
  ::memset(&next_algorithm_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&usz_) -
      reinterpret_cast<char*>(&next_algorithm_)) + sizeof(usz_));
}

SetUpRequest::~SetUpRequest() {
  // @@protoc_insertion_point(destructor:reconciliation.SetUpRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SetUpRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void SetUpRequest::ArenaDtor(void* object) {
  SetUpRequest* _this = reinterpret_cast< SetUpRequest* >(object);
  (void)_this;
}
void SetUpRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SetUpRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SetUpRequest& SetUpRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SetUpRequest_reconciliation_2eproto.base);
  return *internal_default_instance();
}


void SetUpRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:reconciliation.SetUpRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&next_algorithm_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&usz_) -
      reinterpret_cast<char*>(&next_algorithm_)) + sizeof(usz_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SetUpRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .reconciliation.SetUpRequest.Method next_algorithm = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_next_algorithm(static_cast<::reconciliation::SetUpRequest_Method>(val));
        } else goto handle_unusual;
        continue;
      // uint32 seed = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          seed_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 d = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          d_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 object_sz = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          object_sz_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 usz = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          usz_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SetUpRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:reconciliation.SetUpRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .reconciliation.SetUpRequest.Method next_algorithm = 1;
  if (this->next_algorithm() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_next_algorithm(), target);
  }

  // uint32 seed = 2;
  if (this->seed() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_seed(), target);
  }

  // uint32 d = 3;
  if (this->d() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(3, this->_internal_d(), target);
  }

  // uint32 object_sz = 4;
  if (this->object_sz() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(4, this->_internal_object_sz(), target);
  }

  // uint32 usz = 5;
  if (this->usz() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(5, this->_internal_usz(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:reconciliation.SetUpRequest)
  return target;
}

size_t SetUpRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:reconciliation.SetUpRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .reconciliation.SetUpRequest.Method next_algorithm = 1;
  if (this->next_algorithm() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_next_algorithm());
  }

  // uint32 seed = 2;
  if (this->seed() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_seed());
  }

  // uint32 d = 3;
  if (this->d() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_d());
  }

  // uint32 object_sz = 4;
  if (this->object_sz() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_object_sz());
  }

  // uint32 usz = 5;
  if (this->usz() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_usz());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SetUpRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:reconciliation.SetUpRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SetUpRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SetUpRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:reconciliation.SetUpRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:reconciliation.SetUpRequest)
    MergeFrom(*source);
  }
}

void SetUpRequest::MergeFrom(const SetUpRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:reconciliation.SetUpRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.next_algorithm() != 0) {
    _internal_set_next_algorithm(from._internal_next_algorithm());
  }
  if (from.seed() != 0) {
    _internal_set_seed(from._internal_seed());
  }
  if (from.d() != 0) {
    _internal_set_d(from._internal_d());
  }
  if (from.object_sz() != 0) {
    _internal_set_object_sz(from._internal_object_sz());
  }
  if (from.usz() != 0) {
    _internal_set_usz(from._internal_usz());
  }
}

void SetUpRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:reconciliation.SetUpRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetUpRequest::CopyFrom(const SetUpRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:reconciliation.SetUpRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetUpRequest::IsInitialized() const {
  return true;
}

void SetUpRequest::InternalSwap(SetUpRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SetUpRequest, usz_)
      + sizeof(SetUpRequest::usz_)
      - PROTOBUF_FIELD_OFFSET(SetUpRequest, next_algorithm_)>(
          reinterpret_cast<char*>(&next_algorithm_),
          reinterpret_cast<char*>(&other->next_algorithm_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SetUpRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SetUpReply::InitAsDefaultInstance() {
}
class SetUpReply::_Internal {
 public:
};

SetUpReply::SetUpReply(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:reconciliation.SetUpReply)
}
SetUpReply::SetUpReply(const SetUpReply& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  status_ = from.status_;
  // @@protoc_insertion_point(copy_constructor:reconciliation.SetUpReply)
}

void SetUpReply::SharedCtor() {
  status_ = 0;
}

SetUpReply::~SetUpReply() {
  // @@protoc_insertion_point(destructor:reconciliation.SetUpReply)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SetUpReply::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void SetUpReply::ArenaDtor(void* object) {
  SetUpReply* _this = reinterpret_cast< SetUpReply* >(object);
  (void)_this;
}
void SetUpReply::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SetUpReply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SetUpReply& SetUpReply::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SetUpReply_reconciliation_2eproto.base);
  return *internal_default_instance();
}


void SetUpReply::Clear() {
// @@protoc_insertion_point(message_clear_start:reconciliation.SetUpReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  status_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SetUpReply::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .reconciliation.SetUpReply.PreviousExperimentStatus status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_status(static_cast<::reconciliation::SetUpReply_PreviousExperimentStatus>(val));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SetUpReply::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:reconciliation.SetUpReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .reconciliation.SetUpReply.PreviousExperimentStatus status = 1;
  if (this->status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_status(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:reconciliation.SetUpReply)
  return target;
}

size_t SetUpReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:reconciliation.SetUpReply)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .reconciliation.SetUpReply.PreviousExperimentStatus status = 1;
  if (this->status() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_status());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SetUpReply::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:reconciliation.SetUpReply)
  GOOGLE_DCHECK_NE(&from, this);
  const SetUpReply* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SetUpReply>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:reconciliation.SetUpReply)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:reconciliation.SetUpReply)
    MergeFrom(*source);
  }
}

void SetUpReply::MergeFrom(const SetUpReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:reconciliation.SetUpReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.status() != 0) {
    _internal_set_status(from._internal_status());
  }
}

void SetUpReply::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:reconciliation.SetUpReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetUpReply::CopyFrom(const SetUpReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:reconciliation.SetUpReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetUpReply::IsInitialized() const {
  return true;
}

void SetUpReply::InternalSwap(SetUpReply* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(status_, other->status_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SetUpReply::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void EstimateRequest::InitAsDefaultInstance() {
}
class EstimateRequest::_Internal {
 public:
};

EstimateRequest::EstimateRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  sketches_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:reconciliation.EstimateRequest)
}
EstimateRequest::EstimateRequest(const EstimateRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      sketches_(from.sketches_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:reconciliation.EstimateRequest)
}

void EstimateRequest::SharedCtor() {
}

EstimateRequest::~EstimateRequest() {
  // @@protoc_insertion_point(destructor:reconciliation.EstimateRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void EstimateRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void EstimateRequest::ArenaDtor(void* object) {
  EstimateRequest* _this = reinterpret_cast< EstimateRequest* >(object);
  (void)_this;
}
void EstimateRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void EstimateRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const EstimateRequest& EstimateRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_EstimateRequest_reconciliation_2eproto.base);
  return *internal_default_instance();
}


void EstimateRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:reconciliation.EstimateRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  sketches_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* EstimateRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated int32 sketches = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedInt32Parser(_internal_mutable_sketches(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8) {
          _internal_add_sketches(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* EstimateRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:reconciliation.EstimateRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int32 sketches = 1;
  {
    int byte_size = _sketches_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteInt32Packed(
          1, _internal_sketches(), byte_size, target);
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:reconciliation.EstimateRequest)
  return target;
}

size_t EstimateRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:reconciliation.EstimateRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated int32 sketches = 1;
  {
    size_t data_size = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      Int32Size(this->sketches_);
    if (data_size > 0) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<::PROTOBUF_NAMESPACE_ID::int32>(data_size));
    }
    int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(data_size);
    _sketches_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void EstimateRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:reconciliation.EstimateRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const EstimateRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<EstimateRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:reconciliation.EstimateRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:reconciliation.EstimateRequest)
    MergeFrom(*source);
  }
}

void EstimateRequest::MergeFrom(const EstimateRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:reconciliation.EstimateRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  sketches_.MergeFrom(from.sketches_);
}

void EstimateRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:reconciliation.EstimateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EstimateRequest::CopyFrom(const EstimateRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:reconciliation.EstimateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EstimateRequest::IsInitialized() const {
  return true;
}

void EstimateRequest::InternalSwap(EstimateRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  sketches_.InternalSwap(&other->sketches_);
}

::PROTOBUF_NAMESPACE_ID::Metadata EstimateRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void EstimateReply::InitAsDefaultInstance() {
}
class EstimateReply::_Internal {
 public:
};

EstimateReply::EstimateReply(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:reconciliation.EstimateReply)
}
EstimateReply::EstimateReply(const EstimateReply& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  estimated_value_ = from.estimated_value_;
  // @@protoc_insertion_point(copy_constructor:reconciliation.EstimateReply)
}

void EstimateReply::SharedCtor() {
  estimated_value_ = 0;
}

EstimateReply::~EstimateReply() {
  // @@protoc_insertion_point(destructor:reconciliation.EstimateReply)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void EstimateReply::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void EstimateReply::ArenaDtor(void* object) {
  EstimateReply* _this = reinterpret_cast< EstimateReply* >(object);
  (void)_this;
}
void EstimateReply::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void EstimateReply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const EstimateReply& EstimateReply::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_EstimateReply_reconciliation_2eproto.base);
  return *internal_default_instance();
}


void EstimateReply::Clear() {
// @@protoc_insertion_point(message_clear_start:reconciliation.EstimateReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  estimated_value_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* EstimateReply::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // float estimated_value = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 13)) {
          estimated_value_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* EstimateReply::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:reconciliation.EstimateReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float estimated_value = 1;
  if (!(this->estimated_value() <= 0 && this->estimated_value() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(1, this->_internal_estimated_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:reconciliation.EstimateReply)
  return target;
}

size_t EstimateReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:reconciliation.EstimateReply)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // float estimated_value = 1;
  if (!(this->estimated_value() <= 0 && this->estimated_value() >= 0)) {
    total_size += 1 + 4;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void EstimateReply::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:reconciliation.EstimateReply)
  GOOGLE_DCHECK_NE(&from, this);
  const EstimateReply* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<EstimateReply>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:reconciliation.EstimateReply)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:reconciliation.EstimateReply)
    MergeFrom(*source);
  }
}

void EstimateReply::MergeFrom(const EstimateReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:reconciliation.EstimateReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!(from.estimated_value() <= 0 && from.estimated_value() >= 0)) {
    _internal_set_estimated_value(from._internal_estimated_value());
  }
}

void EstimateReply::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:reconciliation.EstimateReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EstimateReply::CopyFrom(const EstimateReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:reconciliation.EstimateReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EstimateReply::IsInitialized() const {
  return true;
}

void EstimateReply::InternalSwap(EstimateReply* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(estimated_value_, other->estimated_value_);
}

::PROTOBUF_NAMESPACE_ID::Metadata EstimateReply::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void PinSketchRequest::InitAsDefaultInstance() {
}
class PinSketchRequest::_Internal {
 public:
};

PinSketchRequest::PinSketchRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:reconciliation.PinSketchRequest)
}
PinSketchRequest::PinSketchRequest(const PinSketchRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  sketch_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_sketch().empty()) {
    sketch_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_sketch(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:reconciliation.PinSketchRequest)
}

void PinSketchRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_PinSketchRequest_reconciliation_2eproto.base);
  sketch_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

PinSketchRequest::~PinSketchRequest() {
  // @@protoc_insertion_point(destructor:reconciliation.PinSketchRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void PinSketchRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  sketch_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void PinSketchRequest::ArenaDtor(void* object) {
  PinSketchRequest* _this = reinterpret_cast< PinSketchRequest* >(object);
  (void)_this;
}
void PinSketchRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PinSketchRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PinSketchRequest& PinSketchRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PinSketchRequest_reconciliation_2eproto.base);
  return *internal_default_instance();
}


void PinSketchRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:reconciliation.PinSketchRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  sketch_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PinSketchRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string sketch = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_sketch();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "reconciliation.PinSketchRequest.sketch"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PinSketchRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:reconciliation.PinSketchRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string sketch = 1;
  if (this->sketch().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_sketch().data(), static_cast<int>(this->_internal_sketch().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "reconciliation.PinSketchRequest.sketch");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_sketch(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:reconciliation.PinSketchRequest)
  return target;
}

size_t PinSketchRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:reconciliation.PinSketchRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string sketch = 1;
  if (this->sketch().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_sketch());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PinSketchRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:reconciliation.PinSketchRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const PinSketchRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PinSketchRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:reconciliation.PinSketchRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:reconciliation.PinSketchRequest)
    MergeFrom(*source);
  }
}

void PinSketchRequest::MergeFrom(const PinSketchRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:reconciliation.PinSketchRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.sketch().size() > 0) {
    _internal_set_sketch(from._internal_sketch());
  }
}

void PinSketchRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:reconciliation.PinSketchRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PinSketchRequest::CopyFrom(const PinSketchRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:reconciliation.PinSketchRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PinSketchRequest::IsInitialized() const {
  return true;
}

void PinSketchRequest::InternalSwap(PinSketchRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  sketch_.Swap(&other->sketch_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata PinSketchRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void PinSketchReply::InitAsDefaultInstance() {
}
class PinSketchReply::_Internal {
 public:
};

PinSketchReply::PinSketchReply(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  missing_keys_(arena),
  pushed_key_values_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:reconciliation.PinSketchReply)
}
PinSketchReply::PinSketchReply(const PinSketchReply& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      missing_keys_(from.missing_keys_),
      pushed_key_values_(from.pushed_key_values_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:reconciliation.PinSketchReply)
}

void PinSketchReply::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_PinSketchReply_reconciliation_2eproto.base);
}

PinSketchReply::~PinSketchReply() {
  // @@protoc_insertion_point(destructor:reconciliation.PinSketchReply)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void PinSketchReply::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void PinSketchReply::ArenaDtor(void* object) {
  PinSketchReply* _this = reinterpret_cast< PinSketchReply* >(object);
  (void)_this;
}
void PinSketchReply::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PinSketchReply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PinSketchReply& PinSketchReply::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PinSketchReply_reconciliation_2eproto.base);
  return *internal_default_instance();
}


void PinSketchReply::Clear() {
// @@protoc_insertion_point(message_clear_start:reconciliation.PinSketchReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  missing_keys_.Clear();
  pushed_key_values_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PinSketchReply::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated int32 missing_keys = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedInt32Parser(_internal_mutable_missing_keys(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8) {
          _internal_add_missing_keys(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .reconciliation.KeyValue pushed_key_values = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_pushed_key_values(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PinSketchReply::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:reconciliation.PinSketchReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int32 missing_keys = 1;
  {
    int byte_size = _missing_keys_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteInt32Packed(
          1, _internal_missing_keys(), byte_size, target);
    }
  }

  // repeated .reconciliation.KeyValue pushed_key_values = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_pushed_key_values_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, this->_internal_pushed_key_values(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:reconciliation.PinSketchReply)
  return target;
}

size_t PinSketchReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:reconciliation.PinSketchReply)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated int32 missing_keys = 1;
  {
    size_t data_size = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      Int32Size(this->missing_keys_);
    if (data_size > 0) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<::PROTOBUF_NAMESPACE_ID::int32>(data_size));
    }
    int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(data_size);
    _missing_keys_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // repeated .reconciliation.KeyValue pushed_key_values = 2;
  total_size += 1UL * this->_internal_pushed_key_values_size();
  for (const auto& msg : this->pushed_key_values_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PinSketchReply::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:reconciliation.PinSketchReply)
  GOOGLE_DCHECK_NE(&from, this);
  const PinSketchReply* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PinSketchReply>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:reconciliation.PinSketchReply)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:reconciliation.PinSketchReply)
    MergeFrom(*source);
  }
}

void PinSketchReply::MergeFrom(const PinSketchReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:reconciliation.PinSketchReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  missing_keys_.MergeFrom(from.missing_keys_);
  pushed_key_values_.MergeFrom(from.pushed_key_values_);
}

void PinSketchReply::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:reconciliation.PinSketchReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PinSketchReply::CopyFrom(const PinSketchReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:reconciliation.PinSketchReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PinSketchReply::IsInitialized() const {
  return true;
}

void PinSketchReply::InternalSwap(PinSketchReply* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  missing_keys_.InternalSwap(&other->missing_keys_);
  pushed_key_values_.InternalSwap(&other->pushed_key_values_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PinSketchReply::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void PbsRequest::InitAsDefaultInstance() {
}
class PbsRequest::_Internal {
 public:
};

PbsRequest::PbsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  pushed_key_values_(arena),
  missing_keys_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:reconciliation.PbsRequest)
}
PbsRequest::PbsRequest(const PbsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      pushed_key_values_(from.pushed_key_values_),
      missing_keys_(from.missing_keys_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  encoding_msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_encoding_msg().empty()) {
    encoding_msg_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_encoding_msg(),
      GetArena());
  }
  encoding_hint_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_encoding_hint().empty()) {
    encoding_hint_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_encoding_hint(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:reconciliation.PbsRequest)
}

void PbsRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_PbsRequest_reconciliation_2eproto.base);
  encoding_msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  encoding_hint_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

PbsRequest::~PbsRequest() {
  // @@protoc_insertion_point(destructor:reconciliation.PbsRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void PbsRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  encoding_msg_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  encoding_hint_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void PbsRequest::ArenaDtor(void* object) {
  PbsRequest* _this = reinterpret_cast< PbsRequest* >(object);
  (void)_this;
}
void PbsRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PbsRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PbsRequest& PbsRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PbsRequest_reconciliation_2eproto.base);
  return *internal_default_instance();
}


void PbsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:reconciliation.PbsRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  pushed_key_values_.Clear();
  missing_keys_.Clear();
  encoding_msg_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  encoding_hint_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PbsRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bytes encoding_msg = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_encoding_msg();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes encoding_hint = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_encoding_hint();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .reconciliation.KeyValue pushed_key_values = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_pushed_key_values(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated uint32 missing_keys = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedUInt32Parser(_internal_mutable_missing_keys(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32) {
          _internal_add_missing_keys(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PbsRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:reconciliation.PbsRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes encoding_msg = 1;
  if (this->encoding_msg().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_encoding_msg(), target);
  }

  // bytes encoding_hint = 2;
  if (this->encoding_hint().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_encoding_hint(), target);
  }

  // repeated .reconciliation.KeyValue pushed_key_values = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_pushed_key_values_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, this->_internal_pushed_key_values(i), target, stream);
  }

  // repeated uint32 missing_keys = 4;
  {
    int byte_size = _missing_keys_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteUInt32Packed(
          4, _internal_missing_keys(), byte_size, target);
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:reconciliation.PbsRequest)
  return target;
}

size_t PbsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:reconciliation.PbsRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .reconciliation.KeyValue pushed_key_values = 3;
  total_size += 1UL * this->_internal_pushed_key_values_size();
  for (const auto& msg : this->pushed_key_values_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated uint32 missing_keys = 4;
  {
    size_t data_size = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      UInt32Size(this->missing_keys_);
    if (data_size > 0) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<::PROTOBUF_NAMESPACE_ID::int32>(data_size));
    }
    int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(data_size);
    _missing_keys_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // bytes encoding_msg = 1;
  if (this->encoding_msg().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_encoding_msg());
  }

  // bytes encoding_hint = 2;
  if (this->encoding_hint().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_encoding_hint());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PbsRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:reconciliation.PbsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const PbsRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PbsRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:reconciliation.PbsRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:reconciliation.PbsRequest)
    MergeFrom(*source);
  }
}

void PbsRequest::MergeFrom(const PbsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:reconciliation.PbsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  pushed_key_values_.MergeFrom(from.pushed_key_values_);
  missing_keys_.MergeFrom(from.missing_keys_);
  if (from.encoding_msg().size() > 0) {
    _internal_set_encoding_msg(from._internal_encoding_msg());
  }
  if (from.encoding_hint().size() > 0) {
    _internal_set_encoding_hint(from._internal_encoding_hint());
  }
}

void PbsRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:reconciliation.PbsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PbsRequest::CopyFrom(const PbsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:reconciliation.PbsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PbsRequest::IsInitialized() const {
  return true;
}

void PbsRequest::InternalSwap(PbsRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  pushed_key_values_.InternalSwap(&other->pushed_key_values_);
  missing_keys_.InternalSwap(&other->missing_keys_);
  encoding_msg_.Swap(&other->encoding_msg_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  encoding_hint_.Swap(&other->encoding_hint_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata PbsRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void PbsReply::InitAsDefaultInstance() {
}
class PbsReply::_Internal {
 public:
};

PbsReply::PbsReply(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  xors_(arena),
  checksum_(arena),
  pushed_key_values_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:reconciliation.PbsReply)
}
PbsReply::PbsReply(const PbsReply& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      xors_(from.xors_),
      checksum_(from.checksum_),
      pushed_key_values_(from.pushed_key_values_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  decoding_msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_decoding_msg().empty()) {
    decoding_msg_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_decoding_msg(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:reconciliation.PbsReply)
}

void PbsReply::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_PbsReply_reconciliation_2eproto.base);
  decoding_msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

PbsReply::~PbsReply() {
  // @@protoc_insertion_point(destructor:reconciliation.PbsReply)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void PbsReply::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  decoding_msg_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void PbsReply::ArenaDtor(void* object) {
  PbsReply* _this = reinterpret_cast< PbsReply* >(object);
  (void)_this;
}
void PbsReply::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PbsReply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PbsReply& PbsReply::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PbsReply_reconciliation_2eproto.base);
  return *internal_default_instance();
}


void PbsReply::Clear() {
// @@protoc_insertion_point(message_clear_start:reconciliation.PbsReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  xors_.Clear();
  checksum_.Clear();
  pushed_key_values_.Clear();
  decoding_msg_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PbsReply::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bytes decoding_msg = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_decoding_msg();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated uint32 xors = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedUInt32Parser(_internal_mutable_xors(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16) {
          _internal_add_xors(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated uint32 checksum = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedUInt32Parser(_internal_mutable_checksum(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24) {
          _internal_add_checksum(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .reconciliation.KeyValue pushed_key_values = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_pushed_key_values(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<34>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PbsReply::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:reconciliation.PbsReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes decoding_msg = 1;
  if (this->decoding_msg().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_decoding_msg(), target);
  }

  // repeated uint32 xors = 2;
  {
    int byte_size = _xors_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteUInt32Packed(
          2, _internal_xors(), byte_size, target);
    }
  }

  // repeated uint32 checksum = 3;
  {
    int byte_size = _checksum_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteUInt32Packed(
          3, _internal_checksum(), byte_size, target);
    }
  }

  // repeated .reconciliation.KeyValue pushed_key_values = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_pushed_key_values_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, this->_internal_pushed_key_values(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:reconciliation.PbsReply)
  return target;
}

size_t PbsReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:reconciliation.PbsReply)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated uint32 xors = 2;
  {
    size_t data_size = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      UInt32Size(this->xors_);
    if (data_size > 0) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<::PROTOBUF_NAMESPACE_ID::int32>(data_size));
    }
    int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(data_size);
    _xors_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // repeated uint32 checksum = 3;
  {
    size_t data_size = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      UInt32Size(this->checksum_);
    if (data_size > 0) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<::PROTOBUF_NAMESPACE_ID::int32>(data_size));
    }
    int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(data_size);
    _checksum_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // repeated .reconciliation.KeyValue pushed_key_values = 4;
  total_size += 1UL * this->_internal_pushed_key_values_size();
  for (const auto& msg : this->pushed_key_values_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // bytes decoding_msg = 1;
  if (this->decoding_msg().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_decoding_msg());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PbsReply::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:reconciliation.PbsReply)
  GOOGLE_DCHECK_NE(&from, this);
  const PbsReply* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PbsReply>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:reconciliation.PbsReply)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:reconciliation.PbsReply)
    MergeFrom(*source);
  }
}

void PbsReply::MergeFrom(const PbsReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:reconciliation.PbsReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  xors_.MergeFrom(from.xors_);
  checksum_.MergeFrom(from.checksum_);
  pushed_key_values_.MergeFrom(from.pushed_key_values_);
  if (from.decoding_msg().size() > 0) {
    _internal_set_decoding_msg(from._internal_decoding_msg());
  }
}

void PbsReply::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:reconciliation.PbsReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PbsReply::CopyFrom(const PbsReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:reconciliation.PbsReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PbsReply::IsInitialized() const {
  return true;
}

void PbsReply::InternalSwap(PbsReply* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  xors_.InternalSwap(&other->xors_);
  checksum_.InternalSwap(&other->checksum_);
  pushed_key_values_.InternalSwap(&other->pushed_key_values_);
  decoding_msg_.Swap(&other->decoding_msg_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata PbsReply::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void IbfCell::InitAsDefaultInstance() {
}
class IbfCell::_Internal {
 public:
};

IbfCell::IbfCell(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:reconciliation.IbfCell)
}
IbfCell::IbfCell(const IbfCell& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&keysum_, &from.keysum_,
    static_cast<size_t>(reinterpret_cast<char*>(&keycheck_) -
    reinterpret_cast<char*>(&keysum_)) + sizeof(keycheck_));
  // @@protoc_insertion_point(copy_constructor:reconciliation.IbfCell)
}

void IbfCell::SharedCtor() {
  ::memset(&keysum_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&keycheck_) -
      reinterpret_cast<char*>(&keysum_)) + sizeof(keycheck_));
}

IbfCell::~IbfCell() {
  // @@protoc_insertion_point(destructor:reconciliation.IbfCell)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void IbfCell::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void IbfCell::ArenaDtor(void* object) {
  IbfCell* _this = reinterpret_cast< IbfCell* >(object);
  (void)_this;
}
void IbfCell::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void IbfCell::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const IbfCell& IbfCell::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_IbfCell_reconciliation_2eproto.base);
  return *internal_default_instance();
}


void IbfCell::Clear() {
// @@protoc_insertion_point(message_clear_start:reconciliation.IbfCell)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&keysum_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&keycheck_) -
      reinterpret_cast<char*>(&keysum_)) + sizeof(keycheck_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* IbfCell::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 count = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          count_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 keySum = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          keysum_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 keyCheck = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          keycheck_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* IbfCell::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:reconciliation.IbfCell)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 count = 1;
  if (this->count() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_count(), target);
  }

  // uint64 keySum = 2;
  if (this->keysum() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(2, this->_internal_keysum(), target);
  }

  // uint32 keyCheck = 3;
  if (this->keycheck() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(3, this->_internal_keycheck(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:reconciliation.IbfCell)
  return target;
}

size_t IbfCell::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:reconciliation.IbfCell)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 keySum = 2;
  if (this->keysum() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_keysum());
  }

  // int32 count = 1;
  if (this->count() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_count());
  }

  // uint32 keyCheck = 3;
  if (this->keycheck() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_keycheck());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void IbfCell::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:reconciliation.IbfCell)
  GOOGLE_DCHECK_NE(&from, this);
  const IbfCell* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<IbfCell>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:reconciliation.IbfCell)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:reconciliation.IbfCell)
    MergeFrom(*source);
  }
}

void IbfCell::MergeFrom(const IbfCell& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:reconciliation.IbfCell)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.keysum() != 0) {
    _internal_set_keysum(from._internal_keysum());
  }
  if (from.count() != 0) {
    _internal_set_count(from._internal_count());
  }
  if (from.keycheck() != 0) {
    _internal_set_keycheck(from._internal_keycheck());
  }
}

void IbfCell::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:reconciliation.IbfCell)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void IbfCell::CopyFrom(const IbfCell& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:reconciliation.IbfCell)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IbfCell::IsInitialized() const {
  return true;
}

void IbfCell::InternalSwap(IbfCell* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(IbfCell, keycheck_)
      + sizeof(IbfCell::keycheck_)
      - PROTOBUF_FIELD_OFFSET(IbfCell, keysum_)>(
          reinterpret_cast<char*>(&keysum_),
          reinterpret_cast<char*>(&other->keysum_));
}

::PROTOBUF_NAMESPACE_ID::Metadata IbfCell::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void DDigestRequest::InitAsDefaultInstance() {
}
class DDigestRequest::_Internal {
 public:
};

DDigestRequest::DDigestRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  cells_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:reconciliation.DDigestRequest)
}
DDigestRequest::DDigestRequest(const DDigestRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      cells_(from.cells_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:reconciliation.DDigestRequest)
}

void DDigestRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_DDigestRequest_reconciliation_2eproto.base);
}

DDigestRequest::~DDigestRequest() {
  // @@protoc_insertion_point(destructor:reconciliation.DDigestRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DDigestRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void DDigestRequest::ArenaDtor(void* object) {
  DDigestRequest* _this = reinterpret_cast< DDigestRequest* >(object);
  (void)_this;
}
void DDigestRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DDigestRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DDigestRequest& DDigestRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DDigestRequest_reconciliation_2eproto.base);
  return *internal_default_instance();
}


void DDigestRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:reconciliation.DDigestRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cells_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DDigestRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .reconciliation.IbfCell cells = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_cells(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DDigestRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:reconciliation.DDigestRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .reconciliation.IbfCell cells = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_cells_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_cells(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:reconciliation.DDigestRequest)
  return target;
}

size_t DDigestRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:reconciliation.DDigestRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .reconciliation.IbfCell cells = 1;
  total_size += 1UL * this->_internal_cells_size();
  for (const auto& msg : this->cells_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DDigestRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:reconciliation.DDigestRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const DDigestRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DDigestRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:reconciliation.DDigestRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:reconciliation.DDigestRequest)
    MergeFrom(*source);
  }
}

void DDigestRequest::MergeFrom(const DDigestRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:reconciliation.DDigestRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cells_.MergeFrom(from.cells_);
}

void DDigestRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:reconciliation.DDigestRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DDigestRequest::CopyFrom(const DDigestRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:reconciliation.DDigestRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DDigestRequest::IsInitialized() const {
  return true;
}

void DDigestRequest::InternalSwap(DDigestRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  cells_.InternalSwap(&other->cells_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DDigestRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void DDigestReply::InitAsDefaultInstance() {
}
class DDigestReply::_Internal {
 public:
};

DDigestReply::DDigestReply(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  missing_keys_(arena),
  pushed_key_values_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:reconciliation.DDigestReply)
}
DDigestReply::DDigestReply(const DDigestReply& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      missing_keys_(from.missing_keys_),
      pushed_key_values_(from.pushed_key_values_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  succeed_ = from.succeed_;
  // @@protoc_insertion_point(copy_constructor:reconciliation.DDigestReply)
}

void DDigestReply::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_DDigestReply_reconciliation_2eproto.base);
  succeed_ = false;
}

DDigestReply::~DDigestReply() {
  // @@protoc_insertion_point(destructor:reconciliation.DDigestReply)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DDigestReply::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void DDigestReply::ArenaDtor(void* object) {
  DDigestReply* _this = reinterpret_cast< DDigestReply* >(object);
  (void)_this;
}
void DDigestReply::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DDigestReply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DDigestReply& DDigestReply::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DDigestReply_reconciliation_2eproto.base);
  return *internal_default_instance();
}


void DDigestReply::Clear() {
// @@protoc_insertion_point(message_clear_start:reconciliation.DDigestReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  missing_keys_.Clear();
  pushed_key_values_.Clear();
  succeed_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DDigestReply::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool succeed = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          succeed_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated int32 missing_keys = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedInt32Parser(_internal_mutable_missing_keys(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16) {
          _internal_add_missing_keys(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .reconciliation.KeyValue pushed_key_values = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_pushed_key_values(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DDigestReply::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:reconciliation.DDigestReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool succeed = 1;
  if (this->succeed() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_succeed(), target);
  }

  // repeated int32 missing_keys = 2;
  {
    int byte_size = _missing_keys_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteInt32Packed(
          2, _internal_missing_keys(), byte_size, target);
    }
  }

  // repeated .reconciliation.KeyValue pushed_key_values = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_pushed_key_values_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, this->_internal_pushed_key_values(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:reconciliation.DDigestReply)
  return target;
}

size_t DDigestReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:reconciliation.DDigestReply)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated int32 missing_keys = 2;
  {
    size_t data_size = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      Int32Size(this->missing_keys_);
    if (data_size > 0) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<::PROTOBUF_NAMESPACE_ID::int32>(data_size));
    }
    int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(data_size);
    _missing_keys_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // repeated .reconciliation.KeyValue pushed_key_values = 3;
  total_size += 1UL * this->_internal_pushed_key_values_size();
  for (const auto& msg : this->pushed_key_values_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // bool succeed = 1;
  if (this->succeed() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DDigestReply::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:reconciliation.DDigestReply)
  GOOGLE_DCHECK_NE(&from, this);
  const DDigestReply* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DDigestReply>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:reconciliation.DDigestReply)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:reconciliation.DDigestReply)
    MergeFrom(*source);
  }
}

void DDigestReply::MergeFrom(const DDigestReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:reconciliation.DDigestReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  missing_keys_.MergeFrom(from.missing_keys_);
  pushed_key_values_.MergeFrom(from.pushed_key_values_);
  if (from.succeed() != 0) {
    _internal_set_succeed(from._internal_succeed());
  }
}

void DDigestReply::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:reconciliation.DDigestReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DDigestReply::CopyFrom(const DDigestReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:reconciliation.DDigestReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DDigestReply::IsInitialized() const {
  return true;
}

void DDigestReply::InternalSwap(DDigestReply* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  missing_keys_.InternalSwap(&other->missing_keys_);
  pushed_key_values_.InternalSwap(&other->pushed_key_values_);
  swap(succeed_, other->succeed_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DDigestReply::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GrapheneRequest::InitAsDefaultInstance() {
}
class GrapheneRequest::_Internal {
 public:
};

GrapheneRequest::GrapheneRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:reconciliation.GrapheneRequest)
}
GrapheneRequest::GrapheneRequest(const GrapheneRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  m_ = from.m_;
  // @@protoc_insertion_point(copy_constructor:reconciliation.GrapheneRequest)
}

void GrapheneRequest::SharedCtor() {
  m_ = 0u;
}

GrapheneRequest::~GrapheneRequest() {
  // @@protoc_insertion_point(destructor:reconciliation.GrapheneRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GrapheneRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void GrapheneRequest::ArenaDtor(void* object) {
  GrapheneRequest* _this = reinterpret_cast< GrapheneRequest* >(object);
  (void)_this;
}
void GrapheneRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GrapheneRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GrapheneRequest& GrapheneRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GrapheneRequest_reconciliation_2eproto.base);
  return *internal_default_instance();
}


void GrapheneRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:reconciliation.GrapheneRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  m_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GrapheneRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint32 m = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          m_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GrapheneRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:reconciliation.GrapheneRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 m = 1;
  if (this->m() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_m(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:reconciliation.GrapheneRequest)
  return target;
}

size_t GrapheneRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:reconciliation.GrapheneRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 m = 1;
  if (this->m() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_m());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GrapheneRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:reconciliation.GrapheneRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GrapheneRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GrapheneRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:reconciliation.GrapheneRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:reconciliation.GrapheneRequest)
    MergeFrom(*source);
  }
}

void GrapheneRequest::MergeFrom(const GrapheneRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:reconciliation.GrapheneRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.m() != 0) {
    _internal_set_m(from._internal_m());
  }
}

void GrapheneRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:reconciliation.GrapheneRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GrapheneRequest::CopyFrom(const GrapheneRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:reconciliation.GrapheneRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GrapheneRequest::IsInitialized() const {
  return true;
}

void GrapheneRequest::InternalSwap(GrapheneRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(m_, other->m_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GrapheneRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GrapheneReply::InitAsDefaultInstance() {
}
class GrapheneReply::_Internal {
 public:
};

GrapheneReply::GrapheneReply(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  ibf_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:reconciliation.GrapheneReply)
}
GrapheneReply::GrapheneReply(const GrapheneReply& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      ibf_(from.ibf_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  bf_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_bf().empty()) {
    bf_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_bf(),
      GetArena());
  }
  ::memcpy(&a_, &from.a_,
    static_cast<size_t>(reinterpret_cast<char*>(&fpr_) -
    reinterpret_cast<char*>(&a_)) + sizeof(fpr_));
  // @@protoc_insertion_point(copy_constructor:reconciliation.GrapheneReply)
}

void GrapheneReply::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GrapheneReply_reconciliation_2eproto.base);
  bf_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&a_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&fpr_) -
      reinterpret_cast<char*>(&a_)) + sizeof(fpr_));
}

GrapheneReply::~GrapheneReply() {
  // @@protoc_insertion_point(destructor:reconciliation.GrapheneReply)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GrapheneReply::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  bf_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GrapheneReply::ArenaDtor(void* object) {
  GrapheneReply* _this = reinterpret_cast< GrapheneReply* >(object);
  (void)_this;
}
void GrapheneReply::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GrapheneReply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GrapheneReply& GrapheneReply::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GrapheneReply_reconciliation_2eproto.base);
  return *internal_default_instance();
}


void GrapheneReply::Clear() {
// @@protoc_insertion_point(message_clear_start:reconciliation.GrapheneReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ibf_.Clear();
  bf_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::memset(&a_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&fpr_) -
      reinterpret_cast<char*>(&a_)) + sizeof(fpr_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GrapheneReply::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint32 a = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          a_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 n = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          n_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // double fpr = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 25)) {
          fpr_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // bytes bf = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_bf();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .reconciliation.IbfCell ibf = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_ibf(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<42>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GrapheneReply::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:reconciliation.GrapheneReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 a = 1;
  if (this->a() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_a(), target);
  }

  // uint32 n = 2;
  if (this->n() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_n(), target);
  }

  // double fpr = 3;
  if (!(this->fpr() <= 0 && this->fpr() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(3, this->_internal_fpr(), target);
  }

  // bytes bf = 4;
  if (this->bf().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        4, this->_internal_bf(), target);
  }

  // repeated .reconciliation.IbfCell ibf = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_ibf_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(5, this->_internal_ibf(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:reconciliation.GrapheneReply)
  return target;
}

size_t GrapheneReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:reconciliation.GrapheneReply)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .reconciliation.IbfCell ibf = 5;
  total_size += 1UL * this->_internal_ibf_size();
  for (const auto& msg : this->ibf_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // bytes bf = 4;
  if (this->bf().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_bf());
  }

  // uint32 a = 1;
  if (this->a() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_a());
  }

  // uint32 n = 2;
  if (this->n() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_n());
  }

  // double fpr = 3;
  if (!(this->fpr() <= 0 && this->fpr() >= 0)) {
    total_size += 1 + 8;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GrapheneReply::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:reconciliation.GrapheneReply)
  GOOGLE_DCHECK_NE(&from, this);
  const GrapheneReply* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GrapheneReply>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:reconciliation.GrapheneReply)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:reconciliation.GrapheneReply)
    MergeFrom(*source);
  }
}

void GrapheneReply::MergeFrom(const GrapheneReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:reconciliation.GrapheneReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  ibf_.MergeFrom(from.ibf_);
  if (from.bf().size() > 0) {
    _internal_set_bf(from._internal_bf());
  }
  if (from.a() != 0) {
    _internal_set_a(from._internal_a());
  }
  if (from.n() != 0) {
    _internal_set_n(from._internal_n());
  }
  if (!(from.fpr() <= 0 && from.fpr() >= 0)) {
    _internal_set_fpr(from._internal_fpr());
  }
}

void GrapheneReply::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:reconciliation.GrapheneReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GrapheneReply::CopyFrom(const GrapheneReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:reconciliation.GrapheneReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GrapheneReply::IsInitialized() const {
  return true;
}

void GrapheneReply::InternalSwap(GrapheneReply* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ibf_.InternalSwap(&other->ibf_);
  bf_.Swap(&other->bf_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GrapheneReply, fpr_)
      + sizeof(GrapheneReply::fpr_)
      - PROTOBUF_FIELD_OFFSET(GrapheneReply, a_)>(
          reinterpret_cast<char*>(&a_),
          reinterpret_cast<char*>(&other->a_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GrapheneReply::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void KeyValue::InitAsDefaultInstance() {
}
class KeyValue::_Internal {
 public:
};

KeyValue::KeyValue(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:reconciliation.KeyValue)
}
KeyValue::KeyValue(const KeyValue& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_value().empty()) {
    value_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_value(),
      GetArena());
  }
  key_ = from.key_;
  // @@protoc_insertion_point(copy_constructor:reconciliation.KeyValue)
}

void KeyValue::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_KeyValue_reconciliation_2eproto.base);
  value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  key_ = 0;
}

KeyValue::~KeyValue() {
  // @@protoc_insertion_point(destructor:reconciliation.KeyValue)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void KeyValue::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  value_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void KeyValue::ArenaDtor(void* object) {
  KeyValue* _this = reinterpret_cast< KeyValue* >(object);
  (void)_this;
}
void KeyValue::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void KeyValue::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const KeyValue& KeyValue::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_KeyValue_reconciliation_2eproto.base);
  return *internal_default_instance();
}


void KeyValue::Clear() {
// @@protoc_insertion_point(message_clear_start:reconciliation.KeyValue)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  value_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  key_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* KeyValue::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 key = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          key_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string value = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_value();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "reconciliation.KeyValue.value"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* KeyValue::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:reconciliation.KeyValue)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 key = 1;
  if (this->key() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_key(), target);
  }

  // string value = 2;
  if (this->value().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_value().data(), static_cast<int>(this->_internal_value().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "reconciliation.KeyValue.value");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:reconciliation.KeyValue)
  return target;
}

size_t KeyValue::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:reconciliation.KeyValue)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string value = 2;
  if (this->value().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_value());
  }

  // int32 key = 1;
  if (this->key() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_key());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void KeyValue::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:reconciliation.KeyValue)
  GOOGLE_DCHECK_NE(&from, this);
  const KeyValue* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<KeyValue>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:reconciliation.KeyValue)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:reconciliation.KeyValue)
    MergeFrom(*source);
  }
}

void KeyValue::MergeFrom(const KeyValue& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:reconciliation.KeyValue)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.value().size() > 0) {
    _internal_set_value(from._internal_value());
  }
  if (from.key() != 0) {
    _internal_set_key(from._internal_key());
  }
}

void KeyValue::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:reconciliation.KeyValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void KeyValue::CopyFrom(const KeyValue& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:reconciliation.KeyValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool KeyValue::IsInitialized() const {
  return true;
}

void KeyValue::InternalSwap(KeyValue* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  value_.Swap(&other->value_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(key_, other->key_);
}

::PROTOBUF_NAMESPACE_ID::Metadata KeyValue::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SynchronizeMessage::InitAsDefaultInstance() {
}
class SynchronizeMessage::_Internal {
 public:
};

SynchronizeMessage::SynchronizeMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  pushes_(arena),
  pulls_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:reconciliation.SynchronizeMessage)
}
SynchronizeMessage::SynchronizeMessage(const SynchronizeMessage& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      pushes_(from.pushes_),
      pulls_(from.pulls_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:reconciliation.SynchronizeMessage)
}

void SynchronizeMessage::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SynchronizeMessage_reconciliation_2eproto.base);
}

SynchronizeMessage::~SynchronizeMessage() {
  // @@protoc_insertion_point(destructor:reconciliation.SynchronizeMessage)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SynchronizeMessage::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void SynchronizeMessage::ArenaDtor(void* object) {
  SynchronizeMessage* _this = reinterpret_cast< SynchronizeMessage* >(object);
  (void)_this;
}
void SynchronizeMessage::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SynchronizeMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SynchronizeMessage& SynchronizeMessage::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SynchronizeMessage_reconciliation_2eproto.base);
  return *internal_default_instance();
}


void SynchronizeMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:reconciliation.SynchronizeMessage)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  pushes_.Clear();
  pulls_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SynchronizeMessage::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .reconciliation.KeyValue pushes = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_pushes(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated int32 pulls = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedInt32Parser(_internal_mutable_pulls(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16) {
          _internal_add_pulls(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SynchronizeMessage::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:reconciliation.SynchronizeMessage)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .reconciliation.KeyValue pushes = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_pushes_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_pushes(i), target, stream);
  }

  // repeated int32 pulls = 2;
  {
    int byte_size = _pulls_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteInt32Packed(
          2, _internal_pulls(), byte_size, target);
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:reconciliation.SynchronizeMessage)
  return target;
}

size_t SynchronizeMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:reconciliation.SynchronizeMessage)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .reconciliation.KeyValue pushes = 1;
  total_size += 1UL * this->_internal_pushes_size();
  for (const auto& msg : this->pushes_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated int32 pulls = 2;
  {
    size_t data_size = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      Int32Size(this->pulls_);
    if (data_size > 0) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<::PROTOBUF_NAMESPACE_ID::int32>(data_size));
    }
    int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(data_size);
    _pulls_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SynchronizeMessage::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:reconciliation.SynchronizeMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const SynchronizeMessage* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SynchronizeMessage>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:reconciliation.SynchronizeMessage)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:reconciliation.SynchronizeMessage)
    MergeFrom(*source);
  }
}

void SynchronizeMessage::MergeFrom(const SynchronizeMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:reconciliation.SynchronizeMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  pushes_.MergeFrom(from.pushes_);
  pulls_.MergeFrom(from.pulls_);
}

void SynchronizeMessage::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:reconciliation.SynchronizeMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SynchronizeMessage::CopyFrom(const SynchronizeMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:reconciliation.SynchronizeMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SynchronizeMessage::IsInitialized() const {
  return true;
}

void SynchronizeMessage::InternalSwap(SynchronizeMessage* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  pushes_.InternalSwap(&other->pushes_);
  pulls_.InternalSwap(&other->pulls_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SynchronizeMessage::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace reconciliation
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::reconciliation::SetUpRequest* Arena::CreateMaybeMessage< ::reconciliation::SetUpRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::reconciliation::SetUpRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::reconciliation::SetUpReply* Arena::CreateMaybeMessage< ::reconciliation::SetUpReply >(Arena* arena) {
  return Arena::CreateMessageInternal< ::reconciliation::SetUpReply >(arena);
}
template<> PROTOBUF_NOINLINE ::reconciliation::EstimateRequest* Arena::CreateMaybeMessage< ::reconciliation::EstimateRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::reconciliation::EstimateRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::reconciliation::EstimateReply* Arena::CreateMaybeMessage< ::reconciliation::EstimateReply >(Arena* arena) {
  return Arena::CreateMessageInternal< ::reconciliation::EstimateReply >(arena);
}
template<> PROTOBUF_NOINLINE ::reconciliation::PinSketchRequest* Arena::CreateMaybeMessage< ::reconciliation::PinSketchRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::reconciliation::PinSketchRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::reconciliation::PinSketchReply* Arena::CreateMaybeMessage< ::reconciliation::PinSketchReply >(Arena* arena) {
  return Arena::CreateMessageInternal< ::reconciliation::PinSketchReply >(arena);
}
template<> PROTOBUF_NOINLINE ::reconciliation::PbsRequest* Arena::CreateMaybeMessage< ::reconciliation::PbsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::reconciliation::PbsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::reconciliation::PbsReply* Arena::CreateMaybeMessage< ::reconciliation::PbsReply >(Arena* arena) {
  return Arena::CreateMessageInternal< ::reconciliation::PbsReply >(arena);
}
template<> PROTOBUF_NOINLINE ::reconciliation::IbfCell* Arena::CreateMaybeMessage< ::reconciliation::IbfCell >(Arena* arena) {
  return Arena::CreateMessageInternal< ::reconciliation::IbfCell >(arena);
}
template<> PROTOBUF_NOINLINE ::reconciliation::DDigestRequest* Arena::CreateMaybeMessage< ::reconciliation::DDigestRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::reconciliation::DDigestRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::reconciliation::DDigestReply* Arena::CreateMaybeMessage< ::reconciliation::DDigestReply >(Arena* arena) {
  return Arena::CreateMessageInternal< ::reconciliation::DDigestReply >(arena);
}
template<> PROTOBUF_NOINLINE ::reconciliation::GrapheneRequest* Arena::CreateMaybeMessage< ::reconciliation::GrapheneRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::reconciliation::GrapheneRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::reconciliation::GrapheneReply* Arena::CreateMaybeMessage< ::reconciliation::GrapheneReply >(Arena* arena) {
  return Arena::CreateMessageInternal< ::reconciliation::GrapheneReply >(arena);
}
template<> PROTOBUF_NOINLINE ::reconciliation::KeyValue* Arena::CreateMaybeMessage< ::reconciliation::KeyValue >(Arena* arena) {
  return Arena::CreateMessageInternal< ::reconciliation::KeyValue >(arena);
}
template<> PROTOBUF_NOINLINE ::reconciliation::SynchronizeMessage* Arena::CreateMaybeMessage< ::reconciliation::SynchronizeMessage >(Arena* arena) {
  return Arena::CreateMessageInternal< ::reconciliation::SynchronizeMessage >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
